/*!
 * # Fomantic-UI - Toast
 * http://github.com/fomantic/Fomantic-UI/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */


/*******************************
            Theme
*******************************/

@type    : 'module';
@element : 'toast';

@import (multiple) '../../theme.config';

/*******************************
        Toast container
*******************************/

.ui.toast-container {
    position: fixed;
    z-index: 9999;
  &.top {
    &.right {
      top: @toastContainerDistance;
      right: @toastContainerDistance;
      margin-left: @toastContainerDistance;
    }
    &.left {
      top: @toastContainerDistance;
      left: @toastContainerDistance;
      margin-right: @toastContainerDistance;
    }
    &.center {
      left: 50%;
      transform: translate(-50%, 0);
      top: @toastContainerDistance;
    }
  }
  &.bottom {
    &.right {
      bottom: @toastContainerDistance;
      right: @toastContainerDistance;
      margin-left: @toastContainerDistance;
    }
    &.left {
      bottom: @toastContainerDistance;
      left: @toastContainerDistance;
      margin-right: @toastContainerDistance;
    }
    &.center {
      left: 50%;
      transform: translate(-50%, 0);
      bottom: @toastContainerDistance;
    }
  }
  & .visible.toast-box,
  .animating.toast-box,
  .toast-box {
    display: table !important;
  }
  & .toast-box {
    margin-bottom: @toastMarginBottom;
    &.compact {
      display: block;
      width: @toastWidth;
    }
    & .ui.toast,
      > .ui.message {
      margin-top: 0;
      margin-bottom: 0;
      position: relative;
    }
    & > .attached.progress {
      z-index:1;
      &.bottom {
        margin: @toastMarginProgress 0 @toastMarginBottom;
      }
      &.top {
        margin: @toastMarginBottom 0 @toastMarginProgress;
      }
      & .bar {
        min-width: 0;
      }
      &.info .bar.bar.bar {
        background: @toastInfoProgressColor;
      }
      &.warning .bar.bar.bar {
        background: @toastWarningProgressColor;
      }
      &.success .bar.bar.bar {
        background: @toastSuccessProgressColor;
      }
      .error .bar.bar.bar {
        background: @toastErrorProgressColor;
      }
      &.neutral .bar.bar.bar {
        background: @toastNeutralProgressColor;
      }
    }
    & > .ui.message > .close.icon {
      top: @toastCloseTopDistance;
      right: @toastCloseRightDistance;
    }
    & .ui.toast > .close.icon {
      cursor: pointer;
      position: absolute;
      margin: 0;
      top: @toastCloseTopDistance;
      right: @toastCloseRightDistance;
      opacity: @toastCloseOpacity;
      transition: @toastCloseTransition;
      &:hover {
        opacity: 1;
      }
    }
    & .progressing {
      animation-iteration-count: 1;
      animation-timing-function: linear;
      &.up {
        animation-name: progressUp;
      }
      &.down {
        animation-name: progressDown;
      }
      &.wait {
        animation-name: progressWait;
      }
    }
    &:hover .pausable.progressing {
      animation-play-state: paused;
    }
    & .ui.toast {
      display:block;
    }
    & :not(.comment) {
      & .actions {
        padding: @toastActionPadding @toastActionPadding @toastActionPaddingBottom @toastActionPadding;
        margin: @toastActionMarginTop @toastActionMargin @toastActionMargin @toastActionMargin;
        text-align: right;
        &:not(.basic) {
          background: @toastActionBackground;
          border-top: @toastActionBorder;
        }
        &.left {
          text-align: left;
        }
      }
    }
    & > .ui.message > .actions:last-child {
      margin-bottom: @toastActionMargin;
    }
  }
}


/*******************************
            Toast
*******************************/

.ui.toast {
    display: none;
    border-radius: @defaultBorderRadius;
    padding: @toastPadding;
    margin: @toastMargin;
    color: @toastTextColor;
  & > .content > .header {
    font-weight: bold;
    color: inherit;
    margin:0;
  }
  &.info {
    background-color: @toastInfoColor;
  }
  &.warning {
    background-color: @toastWarningColor;
  }
  &.success {
    background-color: @toastSuccessColor;
  }
  &.error {
    background-color: @toastErrorColor;
  }
  &.neutral {
    background-color: @toastNeutralColor;
    color: @toastNeutralTextColor;
  }
  &.floating,
  &.hoverfloating:hover {
    box-shadow: @floatingShadow;
  }
  & > .icon:not(.close) {
    font-size: @toastIconFontSize;
    position: absolute;
    & + .content {
      padding-left: @toastIconContentPadding;
    }
  }
  & > .ui.image {
    position: absolute;
    &.avatar + .content {
      padding-left: @toastAvatarImageContentPadding;
    }
    &.mini + .content {
      padding-left: @toastMiniImageContentPadding;
    }
    &.tiny + .content {
      padding-left: @toastTinyImageContentPadding;
    }
  }

  & > .centered.image,
    > .centered.icon {
    transform: translateY(-50%);
    top: 50%;
  }
  &.actions > .centered.image,
  &.actions > .centered.icon {
    top: e(%("calc(50%% - %d)", @toastCenteredAdjustment));
  }
}


.ui.hoverfloating.message:hover {
  box-shadow: 0 0 0 1px inset, @floatingShadow;
}

.ui.center.toast-container .toast-box,
.ui.right.toast-container .toast-box {
    margin-left: auto;
}

.ui.center.toast-container .toast-box {
    margin-right: auto;
}

.ui.toast-container .ui.message,
.ui.toast:hover {
  opacity: @toastOpacityOnHover;
  cursor: @toastCursorOnHover;
}

/*--------------
     Colors
-------------- */

each(@colors, {
  @color: replace(@key, '@', '');
  @c: @colors[@@color][color];
  @l: @colors[@@color][light];

  .ui.@{color}.toast {
    background-color: @c;
  }
  .ui.inverted.@{color}.toast,
  .ui.toast-container .toast-box > .inverted.@{color}.attached.progress .bar {
    background-color: @l;
  }
})

.ui.inverted.toast {
  color: @toastInvertedTextColor;
}

/*---------------
   Progress Bar
 ----------------*/

@keyframes progressDown {
  0% {
    width: 100%;
  }
  100% {
    width: 0;
  }
}
@keyframes progressUp {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}
@keyframes progressWait {
  100% {
    opacity: 1;
  }
}
