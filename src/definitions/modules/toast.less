/*!
 * # Fomantic-UI - Toast
 * http://github.com/fomantic/Fomantic-UI/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */


/*******************************
            Theme
*******************************/

@type    : 'module';
@element : 'toast';

@import (multiple) '../../theme.config';

/*******************************
        Toast container
*******************************/

.ui.toast-container {
    position: fixed;
    z-index: 9999;
  &.top {
    &.right {
      top: @toastContainerDistance;
      right: @toastContainerDistance;
      margin-left: @toastContainerDistance;
    }
    &.left {
      top: @toastContainerDistance;
      left: @toastContainerDistance;
      margin-right: @toastContainerDistance;
    }
    &.center {
      left: 50%;
      transform: translate(-50%, 0);
      top: @toastContainerDistance;
    }
  }
  &.bottom {
    &.right {
      bottom: @toastContainerDistance;
      right: @toastContainerDistance;
      margin-left: @toastContainerDistance;
    }
    &.left {
      bottom: @toastContainerDistance;
      left: @toastContainerDistance;
      margin-right: @toastContainerDistance;
    }
    &.center {
      left: 50%;
      transform: translate(-50%, 0);
      bottom: @toastContainerDistance;
    }
  }
  & .compact {
    display: block;
    width: @toastWidth;
  }
}


/*******************************
            Toast
*******************************/

.toast {
    display: none;
    border-radius: @defaultBorderRadius;
    padding: @toastPadding;
    margin: @toastMargin;
    color: @toastTextColor;
  & > .content > .header {
    font-weight: bold;
    color: inherit;
    margin:0;
  }
  &.info {
    background-color: @toastInfoColor;
  }
  &.warning {
    background-color: @toastWarningColor;
  }
  &.success {
    background-color: @toastSuccessColor;
  }
  &.error {
    background-color: @toastErrorColor;
  }
  &.neutral {
    background-color: @toastNeutralColor;
    color: @toastNeutralTextColor;
  }
}

.toast-box .toast {
  display:block;
}
.floating.toast,
.hoverfloating.toast:hover {
  box-shadow: @floatingShadow;
}

.hoverfloating.message:hover {
  box-shadow: 0 0 0 1px inset, @floatingShadow;
}

.center.toast-container .toast-box,
.right.toast-container .toast-box {
    margin-left: auto;
}

.center.toast-container .toast-box {
    margin-right: auto;
}

.visible.toast-box,
.animating.toast-box,
.toast-box {
    display: table !important;
}

.toast-container .message,
.toast:hover {
    opacity: @toastOpacityOnHover;
    cursor: @toastCursorOnHover;
}

.toast-box .info.attached.progress .bar.bar.bar {
    background: @toastInfoProgressColor;
}

.toast-box .warning.attached.progress .bar.bar.bar {
    background: @toastWarningProgressColor;
}

.toast-box .success.attached.progress .bar.bar.bar {
    background: @toastSuccessProgressColor;
}

.toast-box .error.attached.progress .bar.bar.bar {
    background: @toastErrorProgressColor;
}

.toast-box .neutral.attached.progress .bar.bar.bar {
  background: @toastErrorProgressColor;
}

/*--------------
     Colors
-------------- */

each(@colors, {
  @color: replace(@key, '@', '');
  @c: @colors[@@color][color];
  @l: @colors[@@color][light];

  .@{color}.toast {
    background-color: @c;
  }
  .inverted.@{color}.toast,
  .toast-box .inverted.@{color}.attached.progress .bar {
    background-color: @l;
  }
})

.inverted.toast {
  color: @toastInvertedTextColor;
}

/*--------------
      Icon
---------------*/

.icon.toast {
  & .content {
    padding-left: @toastIconContentPadding;
  }
  & > .icon:not(.close) {
    font-size: @toastIconFontSize;
    position: absolute;
  }
  & > .centered.icon {
    transform: translateY(-50%);
    top: 50%;
  }
}

/*---------------
   Progress Bar
 ----------------*/

.toast-box {
    margin-bottom: @toastMarginBottom;
  & .toast,
    .message {
    margin-top: 0;
    margin-bottom: 0;
    position: relative;
  }
  & .attached.progress{
    z-index:1;
    &.bottom {
      margin: -3px 0 @toastMarginBottom;
    }
    &.top {
      margin: @toastMarginBottom 0 -3px;
    }
    & .bar {
      min-width: 0;
    }
  }
  & .progressing {
    animation-iteration-count: 1;
    animation-timing-function: linear;
    &.up {
      animation-name: progressUp;
    }
    &.down {
      animation-name: progressDown;
    }
    &.wait {
      animation-name: progressWait;
    }
  }
  &:hover .pausable.progressing {
    animation-play-state: paused;
  }
  & .message > .close.icon {
    top: @toastCloseTopDistance;
    right: @toastCloseRightDistance;
  }
  & .toast > .close.icon {
    cursor: pointer;
    position: absolute;
    margin: 0;
    top: @toastCloseTopDistance;
    right: @toastCloseRightDistance;
    opacity: @toastCloseOpacity;
    transition: @toastCloseTransition;
    &:hover {
      opacity: 1;
    }
  }
}


@keyframes progressDown {
  0% {
    width: 100%;
  }
  100% {
    width: 0;
  }
}
@keyframes progressUp {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}
@keyframes progressWait {
  100% {
    opacity: 1;
  }
}
