/*!
 * # Semantic UI - Label
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */


/*******************************
            Theme
*******************************/

@type    : 'element';
@element : 'label';

@import (multiple) '../../theme.config';

/*******************************
            Label
*******************************/

.ui.label {
  display: inline-block;
  line-height: 1;
  vertical-align: @verticalAlign;

  margin: @verticalMargin @horizontalMargin;

  background-color: @backgroundColor;
  background-image: @backgroundImage;
  padding: @verticalPadding @horizontalPadding;
  color: @color;

  text-transform: @textTransform;
  font-weight: @fontWeight;

  border: @border;
  border-radius: @borderRadius;
  transition: @transition;
}

.ui.label:first-child {
  margin-left: 0em;
}
.ui.label:last-child {
  margin-right: 0em;
}

/* Link */
a.ui.label {
  cursor: pointer;
}

/* Inside Link */
.ui.label > a {
  cursor: pointer;
  color: inherit;
  opacity: @linkOpacity;
  transition: @linkTransition;
}
.ui.label > a:hover {
  opacity: 1;
}

/* Image */
.ui.label > img {
  width: auto !important;
  vertical-align: middle;
  height: @imageHeight !important;
}

/* Icon */
.ui.label > .icon {
  width: auto;
  margin: 0em @iconDistance 0em 0em;
}

/* Detail */
.ui.label > .detail {
  display: inline-block;
  vertical-align: top;
  font-weight: @detailFontWeight;
  margin-left: @detailMargin;
  opacity: @detailOpacity;
}
.ui.label > .detail .icon {
  margin: 0em @detailIconDistance 0em 0em;
}


/* Removable label */
.ui.label > .close.icon,
.ui.label > .delete.icon {
  cursor: pointer;
  margin-right: 0em;
  margin-left: @deleteMargin;
  font-size: @deleteSize;
  opacity: @deleteOpacity;
  transition: @deleteTransition;
}
.ui.label > .delete.icon:hover {
  opacity: 1;
}

/*-------------------
       Group
--------------------*/

.ui.labels > .label {
  margin: 0em @groupHorizontalMargin @groupVerticalMargin 0em;
}


/*-------------------
       Coupling
--------------------*/

.ui.header > .ui.label {
  margin-top: @lineHeightOffset;
}


/* Remove border radius on attached segment */
.ui.attached.segment > .ui.top.left.attached.label,
.ui.bottom.attached.segment > .ui.top.left.attached.label  {
  border-top-left-radius: 0;
}
.ui.attached.segment > .ui.top.right.attached.label,
.ui.bottom.attached.segment > .ui.top.right.attached.label  {
  border-top-right-radius: 0;
}
.ui.top.attached.segment > .ui.bottom.left.attached.label  {
  border-bottom-left-radius: 0;
}
.ui.top.attached.segment > .ui.bottom.right.attached.label  {
  border-bottom-right-radius: 0;
}

/* Padding on next content after a label */
.ui.top.attached.label:first-child + :not(.attached),
.ui.top.attached.label + [class*="right floated"] + * {
  margin-top: @attachedSegmentPadding !important;
}
.ui.bottom.attached.label:first-child ~ :last-child:not(.attached) {
  margin-top: 0em;
  margin-bottom: @attachedSegmentPadding !important;
}


/*******************************
             Types
*******************************/

.ui.image.label {
  width: auto !important;
  margin-top: 0em;
  margin-bottom: 0em;
  max-width: 9999px;
  vertical-align: baseline;
  text-transform: none;

  background: @imageLabelBackground;
  padding: @imageLabelPadding;
  border-radius: @imageLabelBorderRadius;
  box-shadow: @imageLabelBoxShadow;
}

.ui.image.label img {
  display: inline-block;
  vertical-align: top;

  height: @imageLabelImageHeight;
  margin: @imageLabelImageMargin;
  border-radius: @imageLabelImageBorderRadius;
}

.ui.image.label .detail {
  background: @imageLabelDetailBackground;
  margin: @imageLabelDetailMargin;
  padding: @imageLabelDetailPadding;
  border-radius: 0em @imageLabelBorderRadius @imageLabelBorderRadius 0em;
}

/*-------------------
         Tag
--------------------*/

.ui.tag.labels .label,
.ui.tag.label {
  margin-left: 1em;
  position: relative;
  padding-left: @tagHorizontalPadding;
  padding-right: @tagHorizontalPadding;

  border-radius: 0em @borderRadius @borderRadius 0em;
  transition: @tagTransition;
}
.ui.tag.labels .label:before,
.ui.tag.label:before {
    position: absolute;
    transform: translateY(-50%) translateX(50%) rotate(-45deg);

    top: @tagTriangleTopOffset;
    right: @tagTriangleRightOffset;
    content: '';

    background-color: inherit;
    background-image: @tagTriangleBackgroundImage;

    width: @tagTriangleSize;
    height: @tagTriangleSize;
    transition: @tagTransition;
}


.ui.tag.labels .label:after,
.ui.tag.label:after {
  position: absolute;
  content: '';
  top: 50%;
  left: -(@tagCircleSize / 2);

  margin-top: -(@tagCircleSize / 2);
  background-color: @tagCircleColor;
  width: @tagCircleSize;
  height: @tagCircleSize;

  box-shadow: @tagCircleBoxShadow;
  border-radius: @circularRadius;
}
.ui.basic.tag.labels .label:before,
.ui.basic.tag.label:before {
  border-color: inherit;
  border-width: @basicBorderWidth 0 0 @basicBorderWidth;
  border-style: inherit;
  right: e(%("calc(100%% + %d)", @basicBorderWidth));
}
.ui.basic.tag.labels .label:after,
.ui.basic.tag.label:after {
  box-shadow: @basicTagCircleBoxShadow;
}

/*-------------------
    Corner Label
--------------------*/

.ui.corner.label {
  position: absolute;
  top: 0em;
  right: 0em;
  margin: 0em;
  padding: 0em;
  text-align: center;

  border-color: @backgroundColor;

  width: @cornerTriangleSize;
  height: @cornerTriangleSize;
  z-index: @cornerTriangleZIndex;
  transition: @cornerTriangleTransition;
}

/* Icon Label */
.ui.corner.label{
  background-color: transparent !important;
}
.ui.corner.label:after {
  position: absolute;
  content: "";
  right: 0em;
  top: 0em;
  z-index: -1;

  width: 0em;
  height: 0em;
  background-color: transparent;

  border-top: 0em solid transparent;
  border-right: @cornerTriangleSize solid transparent;
  border-bottom: @cornerTriangleSize solid transparent;
  border-left: 0em solid transparent;

  border-right-color: inherit;
  transition: @cornerTriangleTransition;
}

.ui.corner.label .icon {
  cursor: default;
  position: relative;
  top: @cornerIconTopOffset;
  left: @cornerIconLeftOffset;
  font-size: @cornerIconSize;
  margin: 0em;
}

/* Left Corner */
.ui.left.corner.label,
.ui.left.corner.label:after {
  right: auto;
  left: 0em;
}
.ui.left.corner.label:after {
  border-top: @cornerTriangleSize solid transparent;
  border-right: @cornerTriangleSize solid transparent;
  border-bottom: 0em solid transparent;
  border-left: 0em solid transparent;

  border-top-color: inherit;
}
.ui.left.corner.label .icon {
  left: -@cornerIconLeftOffset;
}

/* Segment */
.ui.segment > .ui.corner.label {
  top: -1px;
  right: -1px;
}
.ui.segment > .ui.left.corner.label {
  right: auto;
  left: -1px;
}

/*-------------------
       Ribbon
--------------------*/

.ui.ribbon.label {
  position: relative;
  margin: 0em;
  min-width: max-content;
  border-radius: 0em @borderRadius @borderRadius 0em;
  border-color: @ribbonShadowColor;
}

.ui.ribbon.label:after {
  position: absolute;
  content: '';

  top: 100%;
  left: 0%;
  background-color: transparent;

  border-style: solid;
  border-width: 0em @ribbonTriangleSize @ribbonTriangleSize 0em;
  border-color: transparent;
  border-right-color: inherit;

  width: 0em;
  height: 0em;
}
/* Positioning */
.ui.ribbon.label {
  left: @ribbonOffset;
  margin-right: -@ribbonTriangleSize;
  padding-left: @ribbonDistance;
  padding-right: @ribbonTriangleSize;
}
.ui[class*="right ribbon"].label {
  left: @rightRibbonOffset;
  padding-left: @ribbonTriangleSize;
  padding-right: @ribbonDistance;
}

/* Right Ribbon */
.ui[class*="right ribbon"].label {
  text-align: left;
  transform: translateX(-100%);
  border-radius: @borderRadius 0em 0em @borderRadius;
}
.ui[class*="right ribbon"].label:after {
  left: auto;
  right: 0%;

  border-style: solid;
  border-width: @ribbonTriangleSize @ribbonTriangleSize 0em 0em;
  border-color: transparent;
  border-top-color: inherit;
}

/* Inside Table */
.ui.image > .ribbon.label,
.ui.card .image > .ribbon.label {
  position: absolute;
  top: @ribbonImageTopDistance;
}
.ui.card .image > .ui.ribbon.label,
.ui.image > .ui.ribbon.label {
  left: @ribbonImageOffset;
}
.ui.card .image > .ui[class*="right ribbon"].label,
.ui.image > .ui[class*="right ribbon"].label {
  left: @rightRibbonImageOffset;
  padding-left: @horizontalPadding;
}

/* Inside Table */
.ui.table td > .ui.ribbon.label {
  left: @ribbonTableOffset;
}
.ui.table td > .ui[class*="right ribbon"].label {
  left: @rightRibbonTableOffset;
  padding-left: @horizontalPadding;
}


/*-------------------
      Attached
--------------------*/

.ui[class*="top attached"].label,
.ui.attached.label {
  width: 100%;
  position: absolute;
  margin: 0em;
  top: 0em;
  left: 0em;

  padding: @attachedVerticalPadding @attachedHorizontalPadding;

  border-radius: @attachedCornerBorderRadius @attachedCornerBorderRadius 0em 0em;
}
.ui[class*="bottom attached"].label {
  top: auto;
  bottom: 0em;
  border-radius: 0em 0em @attachedCornerBorderRadius @attachedCornerBorderRadius;
}

.ui[class*="top left attached"].label {
  width: auto;
  margin-top: 0em !important;
  border-radius: @attachedCornerBorderRadius 0em @attachedBorderRadius 0em;
}

.ui[class*="top right attached"].label {
  width: auto;
  left: auto;
  right: 0em;
  border-radius: 0em @attachedCornerBorderRadius 0em @attachedBorderRadius;
}
.ui[class*="bottom left attached"].label {
  width: auto;
  top: auto;
  bottom: 0em;
  border-radius: 0em @attachedBorderRadius 0em @attachedCornerBorderRadius;
}
.ui[class*="bottom right attached"].label {
  top: auto;
  bottom: 0em;
  left: auto;
  right: 0em;
  width: auto;
  border-radius: @attachedBorderRadius 0em @attachedCornerBorderRadius 0em;
}


/*******************************
             States
*******************************/

/*-------------------
      Disabled
--------------------*/

.ui.label.disabled {
  opacity: 0.5;
}

/*-------------------
        Hover
--------------------*/

.ui.labels a.label:hover,
a.ui.label:hover {
  background-color: @labelHoverBackgroundColor;
  border-color: @labelHoverBackgroundColor;

  background-image: @labelHoverBackgroundImage;
  color: @labelHoverTextColor;
}
.ui.labels a.label:hover:before,
a.ui.label:hover:before {
  color: @labelHoverTextColor;
}

/*-------------------
        Active
--------------------*/

.ui.active.label {
  background-color: @labelActiveBackgroundColor;
  border-color: @labelActiveBackgroundColor;

  background-image: @labelActiveBackgroundImage;
  color: @labelActiveTextColor;
}
.ui.active.label:before {
  background-color: @labelActiveBackgroundColor;
  background-image: @labelActiveBackgroundImage;
  color: @labelActiveTextColor;
}

/*-------------------
     Active Hover
--------------------*/

.ui.labels a.active.label:hover,
a.ui.active.label:hover {
  background-color: @labelActiveHoverBackgroundColor;
  border-color: @labelActiveHoverBackgroundColor;

  background-image: @labelActiveHoverBackgroundImage;
  color: @labelActiveHoverTextColor;
}
.ui.labels a.active.label:hover:before,
a.ui.active.label:hover:before {
  background-color: @labelActiveHoverBackgroundColor;
  background-image: @labelActiveHoverBackgroundImage;
  color: @labelActiveHoverTextColor;
}


/*-------------------
      Visible
--------------------*/

.ui.labels.visible .label,
.ui.label.visible:not(.dropdown) {
  display: inline-block !important;
}

/*-------------------
      Hidden
--------------------*/

.ui.labels.hidden .label,
.ui.label.hidden {
  display: none !important;
}


/*******************************
           Variations
*******************************/



/*-------------------
        Basic
--------------------*/

.ui.basic.labels .label,
.ui.basic.label {
  background: @basicBackground;
  border: @basicBorder;
  color: @basicColor;
  box-shadow: @basicBoxShadow;
}

/* Link */
.ui.basic.labels a.label:hover,
a.ui.basic.label:hover {
  text-decoration: none;
  background: @basicHoverBackground;
  color: @basicHoverColor;
  box-shadow: @basicHoverBoxShadow;
}

/* Pointing */
.ui.basic.pointing.label:before {
  border-color: inherit;
}


/*-------------------
       Fluid
--------------------*/

.ui.label.fluid,
.ui.fluid.labels > .label {
  width: 100%;
  box-sizing: border-box;
}

/*-------------------
       Inverted
--------------------*/

.ui.inverted.labels .label,
.ui.inverted.label {
  color: @invertedTextColor;
  background-color: @invertedBackgroundColor;
}
.ui.inverted.corner.label {
    border-color: @invertedBackgroundColor;
}
.ui.inverted.corner.label:hover {
    border-color: @backgroundColor;
    transition: none;
}
.ui.inverted.basic.labels .label,
.ui.inverted.basic.label,
.ui.inverted.basic.label:hover {
  border-color: @basicInvertedBorderColor;
  background: @black;
}
.ui.inverted.basic.label:hover {
  color: @linkColor;
}


/*-------------------
       Colors
--------------------*/


.labelColor(@colorRaw; @lightColor; @blackOrGrey:false;) {
  @color: replace(@colorRaw,'Color','');
  @_labelColor: "@{colorRaw}";
  @_labelInvertedColor: "@{lightColor}";
  @_labelTextColor : "@{color}TextColor";
  @_labelHover : "@{colorRaw}Hover";
  @_labelInvertedHover: "@{lightColor}Hover";
  @_labelHoverTextColor : "@{color}HoverTextColor";
  @_labelRibbonShadow : "@{color}RibbonShadow";
  @_labelInvertedRibbonShadow : "@{color}InvertedRibbonShadow";

  .ui.@{color}.labels .label,
  .ui.@{color}.label {
    background-color: @@_labelColor;
    border-color: @@_labelColor;
    color: @@_labelTextColor;
  }
  /* Link */
  .ui.@{color}.labels a.label:hover,
  a.ui.@{color}.label:hover{
    background-color: @@_labelHover;
    border-color: @@_labelHover;
    color: @@_labelHoverTextColor;
  }
  /* Ribbon */
  .ui.@{color}.ribbon.label {
    border-color: @@_labelRibbonShadow;
  }
  /* Basic */
  .ui.basic.labels .@{color}.label,
  .ui.basic.@{color}.label {
    background: @basicBackground;
    border-color: @@_labelColor;
    color: @@_labelColor;
  }
  .ui.basic.labels a.@{color}.label:hover,
  a.ui.basic.@{color}.label:hover {
    background: @basicBackground;
    border-color: @@_labelHover;
    color: @@_labelHover;
  }
  /* Inverted */
  .ui.inverted.labels .@{color}.label,
  .ui.inverted.@{color}.label {
    background-color: @@_labelInvertedColor;
    border-color: @@_labelInvertedColor;
    color: @black;
  }
  /* Inverted Link */
  .ui.inverted.labels a.@{color}.label:hover,
  a.ui.inverted.@{color}.label:hover{
    background-color: @@_labelInvertedHover;
    border-color: @@_labelInvertedHover;
    & when not (@blackOrGrey) {
      color: @black;
    }
    & when (@blackOrGrey) {
      color: @@_labelTextColor;
    }
  }
  /* Inverted Ribbon */
  .ui.inverted.@{color}.ribbon.label {
    border-color: @@_labelInvertedRibbonShadow;
  }
  /* Inverted Basic */
  .ui.inverted.basic.labels .@{color}.label,
  .ui.inverted.basic.@{color}.label {
    background-color: @invertedBackground;
    border-color: @@_labelInvertedColor;
    & when not (@blackOrGrey) {
      color: @@_labelInvertedColor;
    }
    & when (@blackOrGrey) {
      color: @invertedTextColor;
    }
  }
  .ui.inverted.basic.labels a.@{color}.label:hover,
  a.ui.inverted.basic.@{color}.label:hover {
    border-color: @@_labelInvertedHover;
    background-color: @invertedBackground;
    & when not (@blackOrGrey) {
      color: @@_labelInvertedHover;
    }
  }
  /* Inverted Basic Tags */
  .ui.inverted.basic.tag.labels .@{color}.label,
  .ui.inverted.@{color}.basic.tag.label {
    border: @invertedBorderSize solid @@_labelInvertedColor;
  }
  .ui.inverted.basic.tag.labels .@{color}.label:before,
  .ui.inverted.@{color}.basic.tag.label:before {
    border-color: inherit;
    border-width: @invertedBorderSize 0 0 @invertedBorderSize;
    border-style: inherit;
    background-color: @invertedBackground;
    right: e(%("calc(100%% + %d)", @invertedBorderSize));
  }

}
.labelColor(~'primaryColor',~'lightPrimaryColor');
.labelColor(~'secondaryColor',~'lightSecondaryColor');
.labelColor(~'red',~'lightRed');
.labelColor(~'orange',~'lightOrange');
.labelColor(~'yellow',~'lightYellow');
.labelColor(~'olive',~'lightOlive');
.labelColor(~'green',~'lightGreen');
.labelColor(~'teal',~'lightTeal');
.labelColor(~'blue',~'lightBlue');
.labelColor(~'violet',~'lightViolet');
.labelColor(~'purple',~'lightPurple');
.labelColor(~'pink',~'lightPink');
.labelColor(~'brown',~'lightBrown');
.labelColor(~'grey',~'lightGrey');
.labelColor(~'black',~'lightBlack',true);

/*-------------------
     Horizontal
--------------------*/

.ui.horizontal.labels .label,
.ui.horizontal.label {
  margin: 0em @horizontalLabelMargin 0em 0em;

  padding: @horizontalLabelVerticalPadding @horizontalPadding;
  min-width: @horizontalLabelMinWidth;
  text-align: center;
}


/*-------------------
       Circular
--------------------*/

.ui.circular.labels .label,
.ui.circular.label {
  min-width: @circularMinSize;
  min-height: @circularMinSize;

  padding: @circularPadding !important;

  line-height: 1em;
  text-align: center;
  border-radius: @circularRadius;
}
.ui.empty.circular.labels .label,
.ui.empty.circular.label {
  min-width: 0em;
  min-height: 0em;
  overflow: hidden;
  width: @emptyCircleSize;
  height: @emptyCircleSize;
  vertical-align: baseline;
}

/*-------------------
       Pointing
--------------------*/

.ui.pointing.label {
  position: relative;
}

.ui.attached.pointing.label {
  position: absolute;
}

.ui.pointing.label:before {
  background-color: inherit;
  background-image: inherit;
  border-width: 0;
  border-style: solid;
  border-color: @pointingBorderColor;
}
/* Arrow */
.ui.pointing.label:before {
  position: absolute;
  content: '';
  transform: rotate(45deg);
  background-image: none;

  z-index: @pointingTriangleZIndex;
  width: @pointingTriangleSize;
  height: @pointingTriangleSize;
  transition: @pointingTriangleTransition;
}

/*--- Above ---*/
.ui.pointing.label,
.ui[class*="pointing above"].label {
  margin-top: @pointingVerticalDistance;
}
.ui.pointing.label:before,
.ui[class*="pointing above"].label:before {
  border-width: @borderWidth 0px 0px @borderWidth;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  top: 0%;
  left: 50%;
}
/*--- Below ---*/
.ui[class*="bottom pointing"].label,
.ui[class*="pointing below"].label {
  margin-top: 0em;
  margin-bottom: @pointingVerticalDistance;
}
.ui[class*="bottom pointing"].label:before,
.ui[class*="pointing below"].label:before {
  border-width: 0px @borderWidth @borderWidth 0px;
  top: auto;
  right: auto;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  top: 100%;
  left: 50%;
}
/*--- Left ---*/
.ui[class*="left pointing"].label {
  margin-top: 0em;
  margin-left: @pointingHorizontalDistance;
}
.ui[class*="left pointing"].label:before {
  border-width: 0px 0px @borderWidth @borderWidth;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  bottom: auto;
  right: auto;
  top: 50%;
  left: 0em;
}
/*--- Right ---*/
.ui[class*="right pointing"].label {
  margin-top: 0em;
  margin-right: @pointingHorizontalDistance;
}
.ui[class*="right pointing"].label:before {
  border-width: @borderWidth @borderWidth 0px 0px;
  transform: translateX(50%) translateY(-50%) rotate(45deg);
  top: 50%;
  right: 0%;
  bottom: auto;
  left: auto;
}

/* Basic Pointing */

/*--- Above ---*/
.ui.basic.pointing.label:before,
.ui.basic[class*="pointing above"].label:before {
  margin-top: @basicPointingTriangleOffset;
}
/*--- Below ---*/
.ui.basic[class*="bottom pointing"].label:before,
.ui.basic[class*="pointing below"].label:before {
  bottom: auto;
  top: 100%;
  margin-top: -@basicPointingTriangleOffset;
}
/*--- Left ---*/
.ui.basic[class*="left pointing"].label:before {
  top: 50%;
  left: @basicPointingTriangleOffset;
}
/*--- Right ---*/
.ui.basic[class*="right pointing"].label:before {
  top: 50%;
  right: @basicPointingTriangleOffset;
}


/*------------------
   Floating Label
-------------------*/

.ui.floating.label {
  position: absolute;
  z-index: @floatingZIndex;
  top: @floatingTopOffset;
  left: 100%;
  margin: 0em 0em 0em @floatingLeftOffset !important;
}

/*-------------------
        Sizes
--------------------*/

.ui.mini.labels .label,
.ui.mini.label {
  font-size: @mini;
}
.ui.tiny.labels .label,
.ui.tiny.label {
  font-size: @tiny;
}
.ui.small.labels .label,
.ui.small.label {
  font-size: @small;
}
.ui.labels .label,
.ui.label {
  font-size: @medium;
}
.ui.large.labels .label,
.ui.large.label {
  font-size: @large;
}
.ui.big.labels .label,
.ui.big.label {
  font-size: @big;
}
.ui.huge.labels .label,
.ui.huge.label {
  font-size: @huge;
}
.ui.massive.labels .label,
.ui.massive.label {
  font-size: @massive;
}

.loadUIOverrides();
